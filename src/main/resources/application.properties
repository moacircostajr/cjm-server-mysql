server.port=62079

spring.datasource.url=jdbc:mysql://localhost:3306/cjm
spring.datasource.username=cjm
spring.datasource.password=viLVC0if1g

# LOG
logging.file=logCJM.log
logging.level.root=info
logging.file.max-size=10MB

# MYSQL
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# HIRAKI - POOL DE CONEXÕES
spring.datasource.hikari.connection-timeout=25000
spring.datasource.hikari.idle-timeout=20000
spring.datasource.hikari.max-lifetime=10000

# JWT
#jwt.secret=_@HRL&L3tF?Z7ccj4z&L5!nU2B!Rjs3_
jwt.secret=ip9fa2AiOopahk2efeenup8Equiz9loW
# autenticacao com duração de 1 dia
jwt.expiration=86400

# HTTPS
# The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore/keystore.p12
# The password used to generate the certificate
#server.ssl.key-store-password=mae8Wohh
# The alias mapped to the certificate
#server.ssl.key-alias=tomcat
# Since we are using Spring Security enabled application, let's configure it to accept only HTTPS requests:
#security.require-ssl=true

spring.profiles.active=dev
